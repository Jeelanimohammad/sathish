from unittest.mock import patch

@patch("builtins.input", side_effect=["1", "3", "3", "5"])
@patch("builtins.print")
def test_calculator_add(mock_print, mock_input):
    calculator()
    mock_print.assert_any_call("Result: 6.0")  # Example assertion for addition

@patch("builtins.input", side_effect=["2", "10", "5", "5"])
@patch("builtins.print")
def test_calculator_subtract(mock_print, mock_input):
    calculator()
    mock_print.assert_any_call("Result: 5.0")  # Example assertion for subtraction

@patch("builtins.input", side_effect=["3", "4", "5", "5"])
@patch("builtins.print")
def test_calculator_multiply(mock_print, mock_input):
    calculator()
    mock_print.assert_any_call("Result: 20.0")  # Example assertion for multiplication

@patch("builtins.input", side_effect=["4", "20", "4", "5"])
@patch("builtins.print")
def test_calculator_divide(mock_print, mock_input):
    calculator()
    mock_print.assert_any_call("Result: 5.0")  # Example assertion for division